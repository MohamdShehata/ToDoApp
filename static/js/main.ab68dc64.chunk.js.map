{"version":3,"sources":["redux/types.js","Components/Todo.jsx","redux/action.js","App.js","reportWebVitals.js","redux/reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["ADD_TODO","DELETE_TODO","EDIT_TODO","GET_SAVED_TODOS","REMOVE_ALL","COMPLETED","NOT_COMPLETED","Todo","useState","job","setJob","editFlag","setEditFlag","edited","setEdited","dispatch","useDispatch","todos","useSelector","state","todosReducer","useEffect","temp","JSON","parse","localStorage","getItem","type","data","getSavedTodos","addJob","toast","error","position","POSITION","BOTTOM_RIGHT","addTodo","info","onDeleteItem","id","deleteTodo","success","onComplete","completeTodo","onUnComplete","unCompleteTodo","className","placeholder","value","onChange","e","target","onClick","alert","editedId","editTodo","length","map","item","isComplete","size","editedItem","removeItem","App","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","items","Math","random","setItem","stringify","newTodos","filter","tempItems","newItems","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab68dc64.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const EDIT_TODO = \"EDIT_TODO\";\r\nexport const GET_SAVED_TODOS = \"GET_SAVED_TODOS\";\r\nexport const REMOVE_ALL = \"REMOVE_ALL\";\r\nexport const COMPLETED = \"COMPLETED\";\r\nexport const NOT_COMPLETED = \"NOT_COMPLETED\";","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addTodo,\r\n  completeTodo,\r\n  deleteTodo,\r\n  editTodo,\r\n  getSavedTodos,\r\n  removeAll,\r\n  unCompleteTodo,\r\n} from \"../redux/action\";\r\nimport {\r\n  MdDelete,\r\n  MdLens,\r\n  MdModeEdit,\r\n  MdPanoramaFishEye,\r\n} from \"react-icons/md\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./todo.css\";\r\n\r\nconst Todo = () => {\r\n  const [job, setJob] = useState(\"\");\r\n  const [editFlag, setEditFlag] = useState(false);\r\n  const [edited, setEdited] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const todos = useSelector((state) => state.todosReducer.todos);\r\n\r\n  useEffect(() => {\r\n    const temp = JSON.parse(localStorage.getItem(\"list\"));\r\n    if (temp !== null) dispatch(getSavedTodos(temp));\r\n  }, []);\r\n\r\n  const addJob = (job) => {\r\n    if (job === \"\") {\r\n      toast.error(\"Task cannot be empty !\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n    } else {\r\n      dispatch(addTodo(job));\r\n      setJob(\"\");\r\n      toast.info(\" Your Task Is Added Succefully \", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onDeleteItem = (id) => {\r\n    dispatch(deleteTodo(id));\r\n    toast.success(\"Your Task Deleted\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n    });\r\n  };\r\n\r\n  const onEditEnable = (editedItem) => {\r\n    setEditFlag(true);\r\n    setJob(editedItem.job);\r\n    setEdited(editedItem);\r\n  };\r\n\r\n  const editItem = () => {\r\n    if (job === \"\") {\r\n      alert(\"its empty !\");\r\n    } else {\r\n      dispatch(editTodo(edited.id, job));\r\n      setEditFlag(false);\r\n      setJob(\"\");\r\n      toast.success(\"Task Edited successfully\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onDelete = () => {\r\n    dispatch(removeAll());\r\n    localStorage.removeItem(\"list\");\r\n    toast.error(\"all of todos deleted\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n    });\r\n  };\r\n\r\n  const onComplete = (id) => {\r\n    dispatch(completeTodo(id));\r\n    toast.info(\"Yaaaaaaaay ! It's Done \", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n    });\r\n  };\r\n\r\n  const onUnComplete = (id) => {\r\n    dispatch(unCompleteTodo(id));\r\n    toast.info(\"Todo changed to not complete \", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <h2 className=\"title\">Let's Do Something!</h2>\r\n      <input\r\n        className=\"todo__input\"\r\n        type=\"text\"\r\n        placeholder=\"Let's Focus \"\r\n        value={job}\r\n        onChange={(e) => setJob(e.target.value)}\r\n      />\r\n      <button\r\n        className=\"add__button\"\r\n        onClick={editFlag ? editItem : () => addJob(job)}\r\n      >\r\n        {editFlag ? \"Edit\" : \"Add\"}\r\n      </button>\r\n      {todos.length === 0 ? (\r\n        <p className=\"no-job-text\">There is No Task ToDo !</p>\r\n      ) : (\r\n        todos?.map((item) => (\r\n          <div className=\"todo-list\" key={item.id}>\r\n            <div\r\n              className={\r\n                item.isComplete ? \"completed-item\" : \"not-completed-item\"\r\n              }\r\n            >\r\n              <p>{item.job}</p>\r\n              <div className=\"icons\">\r\n                <div>\r\n                  <MdDelete\r\n                    className=\"icon\"\r\n                    size=\"1.2em\"\r\n                    onClick={() => onDeleteItem(item.id)}\r\n                  />\r\n                  <MdModeEdit\r\n                    className=\"icon\"\r\n                    size=\"1.2em\"\r\n                    onClick={() => onEditEnable(item)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  {!item.isComplete ? (\r\n                    <MdPanoramaFishEye\r\n                      className=\"isComplete-Icon\"\r\n                      onClick={() => onComplete(item.id)}\r\n                    />\r\n                  ) : (\r\n                    <MdLens\r\n                      className=\"isComplete-Icon\"\r\n                      onClick={() => onUnComplete(item.id)}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n      <div>\r\n        {todos.length > 1 && (\r\n          <button className=\"delete_all__button\" onClick={onDelete}>\r\n            Delete all\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import {\r\n    ADD_TODO,\r\n    COMPLETED,\r\n    DELETE_TODO,\r\n    EDIT_TODO,\r\n    GET_SAVED_TODOS,\r\n    NOT_COMPLETED,\r\n    REMOVE_ALL,\r\n  } from \"./types\";\r\n  \r\n  export const addTodo = (job) => {\r\n    return {\r\n      type: ADD_TODO,\r\n      data: job,\r\n    };\r\n  };\r\n  \r\n  export const deleteTodo = (id) => {\r\n    return {\r\n      type: DELETE_TODO,\r\n      data: id,\r\n    };\r\n  };\r\n  \r\n  export const editTodo = (editedId, job) => {\r\n    return {\r\n      type: EDIT_TODO,\r\n      data: { editedId, job },\r\n    };\r\n  };\r\n  \r\n  export const getSavedTodos = (todos) => {\r\n    return {\r\n      type: GET_SAVED_TODOS,\r\n      data: todos,\r\n    };\r\n  };\r\n  \r\n  export const removeAll = () => {\r\n    return {\r\n      type: REMOVE_ALL,\r\n    };\r\n  };\r\n  \r\n  export const completeTodo = (id) => {\r\n    return {\r\n      type: COMPLETED,\r\n      data: id,\r\n    };\r\n  };\r\n  \r\n  export const unCompleteTodo = (id) => {\r\n    return {\r\n      type: NOT_COMPLETED,\r\n      data: id,\r\n    };\r\n  };\r\n  ","import Todo from './Components/Todo';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ToastContainer autoClose={2500} />\r\n      <Todo />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n    ADD_TODO,\r\n    COMPLETED,\r\n    DELETE_TODO,\r\n    EDIT_TODO,\r\n    GET_SAVED_TODOS,\r\n    NOT_COMPLETED,\r\n    REMOVE_ALL,\r\n  } from \"./types\";\r\n  \r\n  const initialState = {\r\n    todos: [],\r\n  };\r\n  \r\n  export const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case ADD_TODO :\r\n        const items = [\r\n          ...state.todos,\r\n          { job: action.data, id: Math.random(), isComplete: false },\r\n        ];\r\n        localStorage.setItem(\"list\", JSON.stringify(items));\r\n        return {\r\n          todos: items,\r\n        };\r\n      case DELETE_TODO :\r\n        const newTodos = state.todos.filter((item) => item.id !== action.data);\r\n        localStorage.setItem(\"list\", JSON.stringify(newTodos));\r\n        return {\r\n          todos: newTodos,\r\n        };\r\n      case EDIT_TODO :\r\n        const temp = state.todos.map((item) =>\r\n          item.id === action.data.editedId\r\n            ? { ...item, job: action.data.job }\r\n            : item\r\n        );\r\n        localStorage.setItem(\"list\", JSON.stringify(temp));\r\n        return {\r\n          todos: temp,\r\n        };\r\n      case GET_SAVED_TODOS:\r\n        return {\r\n          todos: action.data,\r\n        };\r\n      case REMOVE_ALL:\r\n        return {\r\n          todos: [],\r\n        };\r\n      case COMPLETED:\r\n        const tempItems = state.todos.map((item) =>\r\n          item.id === action.data ? { ...item, isComplete: true } : item\r\n        );\r\n        localStorage.setItem(\"list\", JSON.stringify(tempItems));\r\n        return {\r\n          todos: tempItems,\r\n        };\r\n      case NOT_COMPLETED:\r\n        const newItems = state.todos.map((item) =>\r\n          item.id === action.data ? { ...item, isComplete: false } : item\r\n        );\r\n        localStorage.setItem(\"list\", JSON.stringify(newItems));\r\n        return {\r\n          todos: newItems,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };","import { combineReducers } from \"redux\";\r\nimport { reducer } from './reducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    todosReducer: reducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from './rootReducer';\r\n\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}